events {
  worker_connections 1024;
}
 
http {
  include       mime.types;
  default_type  application/octet-stream;
  charset       UTF-8;
 
  # Some basic config.
  server_tokens off;
  sendfile      on;
  tcp_nopush    on;
  tcp_nodelay   on;
 
  # On timeouts.
  keepalive_timeout     65;
  client_header_timeout 240;
  client_body_timeout   240;
  fastcgi_read_timeout  249;
  reset_timedout_connection on;
 
  upstream keycloak {
    least_conn;
    server keycloak:8080 max_fails=3 fail_timeout=15s;
  }
 
  server {
    listen 443 ssl http2;
    server_name media.coop.org;
    #root /srv/Portus/public;
 
    ##
    # SSL
 
    ssl on;
 
    # Certificates
    ssl_certificate /secrets/server.pem;
    ssl_certificate_key /secrets/privkey.pem;
 
    # Enable session resumption to improve https performance
    #
    # http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
 
    # Enables server-side protection from BEAST attacks
    # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    ssl_prefer_server_ciphers on;
 
    # Disable SSLv3 (enabled by default since nginx 0.8.19)
    # since it's less secure than TLS
    # http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
 
    # Ciphers chosen for forward secrecy and compatibility.
    #
    # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
 
    ##
    # Docker-specific stuff.
 
    proxy_set_header Host $http_host;   # required for Docker client sake
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Scheme $scheme;
 
    # disable any limits to avoid HTTP 413 for large image uploads
    client_max_body_size 0;
 
    # required to avoid HTTP 411: see Issue #1486
    # (https://github.com/docker/docker/issues/1486)
    chunked_transfer_encoding on;
 
    ##
    # Custom headers.
 
    # Adding HSTS[1] (HTTP Strict Transport Security) to avoid SSL stripping[2].
    #
    # [1] https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
    # [2] https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
 
    # Don't allow the browser to render the page inside a frame or iframe
    # and avoid Clickjacking. More in the following link:
    #
    # https://developer.mozilla.org/en-US/docs/HTTP/X-Frame-Options
    #add_header X-Frame-Options DENY;
 
    # Disable content-type sniffing on some browsers.
    add_header X-Content-Type-Options nosniff;
 
    # This header enables the Cross-site scripting (XSS) filter built into
    # most recent web browsers. It's usually enabled by default anyway, so the
    # role of this header is to re-enable the filter for this particular
    # website if it was disabled by the user.
    add_header X-XSS-Protection "1; mode=block";
 
    # Add header for IE in compatibility mode.
    add_header X-UA-Compatible "IE=edge";
 
    location /keycloak {
      
      proxy_pass http://keycloak;
      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 900;
      proxy_buffering on;
    }

    location / {
      auth_request     /auth;
      auth_request_set $auth_status $upstream_status;
      proxy_pass http://212.253.201.201:3000?info=false&roomId=zpbgp41m;
    }

    location = /auth {
      internal;
      proxy_pass              http://keycloak/keycloak/auth;
      proxy_pass_request_body off;
      proxy_set_header        Content-Length "";
      proxy_set_header        X-Original-URI $request_uri;
    }
 
  }
  server {
    listen 80;
    server_name media.coop.org;

  }
}

